{"version":3,"sources":["meteor://ðŸ’»app/packages/barbatus_stars-rating/template.stars_rating.js","meteor://ðŸ’»app/packages/barbatus_stars-rating/stars_rating.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qF;;;;;;;;;;;;;;;;;;AChsF","file":"/packages/barbatus_stars-rating.js","sourcesContent":["\nTemplate.__checkName(\"starsRating\");\nTemplate[\"starsRating\"] = new Template(\"Template.starsRating\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"getId\"));\n    },\n    \"class\": function() {\n      return [ \"stars-rating \", Spacebars.mustache(view.lookup(\"class\")), \" \", Spacebars.mustache(view.lookup(\"css\"), view.lookup(\"size\")) ];\n    },\n    style: function() {\n      return Spacebars.mustache(view.lookup(\"font\"), view.lookup(\"size\"));\n    },\n    \"data-rating\": function() {\n      return Spacebars.mustache(view.lookup(\"rating\"));\n    },\n    star: function() {\n      return Spacebars.mustache(view.lookup(\"star\"));\n    }\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"stars-inner-wrap\"\n  }, \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      mutable: Spacebars.call(view.lookup(\"getMutable\")),\n      size: Spacebars.call(5)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"_stars\"));\n  }), \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      mutable: Spacebars.call(view.lookup(\"getMutable\")),\n      size: Spacebars.call(4)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"_stars\"));\n  }), \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      mutable: Spacebars.call(view.lookup(\"getMutable\")),\n      size: Spacebars.call(3)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"_stars\"));\n  }), \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      mutable: Spacebars.call(view.lookup(\"getMutable\")),\n      size: Spacebars.call(2)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"_stars\"));\n  }), \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      mutable: Spacebars.call(view.lookup(\"getMutable\")),\n      size: Spacebars.call(1)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"_stars\"));\n  }), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"_stars\");\nTemplate[\"_stars\"] = new Template(\"Template._stars\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"stars\",\n    \"data-stars\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"stars\"), \"length\"));\n    }\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"stars\"));\n  }, function() {\n    return HTML.SPAN({\n      \"class\": function() {\n        return [ \"star-\", Spacebars.mustache(view.lookup(\".\")) ];\n      }\n    }, HTML.I({\n      \"class\": \"star-glyph\"\n    }));\n  }), \"\\n    \");\n}));\n","var rtCss = 'current-rating';\nvar prCss = 'percent';\nvar hasUserCss = 'has-user-rating';\n\nfunction getStarsEl($parent, index) {\n    return $parent.find('[data-stars=\"' + index + '\"]');\n}\n\nfunction getStarEl($parent, index) {\n    return getStarsEl($parent, index).find('.star-' + index);\n}\n\nfunction getStarColor($el) {\n    var span = $('<span>').addClass(rtCss).appendTo($el);\n    var starColor = span.css('color');\n    span.remove();\n    return starColor;\n}\n\nfunction getStarGlyph($el) {\n    var starGlyph = $el.attr('star');\n\n    if (!starGlyph) {\n        // For compatibility with older versions.\n        //\n        // If now star attr is set, take the star symbol\n        // from the upper CSS class (via content property).\n        // This will work in most browsers except IE.\n        starGlyph = $el.css('content');\n\n        if (!starGlyph || starGlyph === 'none') {\n            starGlyph = '\\\\2605';\n        } else {\n            // if it's IE replace glyph with the default symbol.\n            if (starGlyph === 'normal') {\n                starGlyph = '\\\\2605';\n            }\n        }\n    }\n\n    // Prepare glyph for styles.\n    starGlyph = '\"' + starGlyph.trim().replace(/[\\',\\\"]/g, '') + '\"';\n\n    return starGlyph;\n}\n\nfunction buildStyle(className, styles) {\n    var styleStr = '';\n    for (var style in styles) {\n        styleStr += style + ':' + styles[style] + ';';\n    }\n    return '.' + className + '{' + styleStr + '}';\n}\n\nfunction setRating($el, rating, isUser, starGlyph) {\n    var ceil = Math.ceil(rating);\n    var floor = Math.floor(rating);\n    var percent = rating - floor;\n\n    $el.find('.stars').removeClass(rtCss);\n    $el.find('.stars').find('.percent').removeClass(prCss);\n\n    $el.toggleClass(hasUserCss, isUser);\n    for (var i = floor; i >= 0; i--) {\n        getStarsEl($el, i).addClass(rtCss);\n    }\n\n    if (percent) {\n        var $percentStar = getStarEl($el, ceil).addClass(prCss);\n        var starColor = getStarColor($el);\n        $percentStar.find('style').remove();\n        var style = ['<style>#' + getOrSetTmplId(),\n            buildStyle('percent:before', {\n                width: (percent * 100) + '% !important',\n                color: starColor,\n                content: starGlyph}), '</style>'];\n        $percentStar.append(style.join(' '));\n    }\n    $el.trigger('change');\n}\n\nfunction getOrSetTmplId(opt_id) {\n    if (!Template.instance()._id) {\n        Template.instance()._id = opt_id || _.uniqueId('stars_');\n    }\n    return Template.instance()._id;\n}\n\nTemplate.starsRating.helpers({\n    getId: function() {\n        return getOrSetTmplId(this.id);\n    },\n    css: function(size) {\n        if (_.isString(size)) {\n            return 'stars-rating-' + (size || 'sm');\n        }\n    },\n    font: function(size) {\n        if (_.isNumber(size)) {\n            return 'font-size:' + size + 'px';\n        }\n    }\n});\n\nfunction onDataChange($el, rating, starGlyph) {\n    setRating($el, rating, false, starGlyph);\n}\n\nTemplate.starsRating.rendered = function() {\n    var self = this;\n    var $el = $(self.firstNode);\n\n    var starGlyph = getStarGlyph($el);\n\n    // Adds all required styles to set new symbol for the internal\n    // pseudo elements.\n    var style = ['<style>#' + getOrSetTmplId(),\n        buildStyle('star-glyph:before', {\n            content: starGlyph}), '</style>'];\n    $el.append(style.join(' '));\n\n    this.autorun(function() {\n        var userData = Template.currentData();\n        if (userData) {\n            var rating = userData.rating;\n            if (rating) {\n                onDataChange($el, rating, starGlyph);\n            }\n        }\n    });\n};\n\nTemplate.starsRating.events({\n    'mouseover .stars': function(event) {\n        if (this.isMutable || this.mutable) {\n            var $this = $(event.currentTarget);\n            var rating = $this.data('stars');\n\n            for (var i = rating; i >= 0; i--) {\n                getStarsEl($this.parent(), i).addClass('active');\n            }\n\n            for (var i = rating + 1; i <= 5; i++) {\n                getStarsEl($this.parent(), i).removeClass('active');\n            }\n        }\n    },\n    'mouseleave .stars-rating': function(event) {\n        if (this.isMutable || this.mutable) {\n            var $this = $(event.currentTarget);\n            $this.find('.stars').removeClass('active');\n        }\n    },\n    'click .stars': function(event) {\n        if (this.isMutable || this.mutable) {\n            var $this = $(event.currentTarget);\n            var userRating = $this.data('stars');\n            var $el = $this.parent().parent();\n            $el.data('userrating', userRating);\n\n            var $starsWrap = $this.parent();\n            setRating($starsWrap, userRating, true);\n\n            $starsWrap.children().removeClass('active');\n        }\n    }\n});\n\nTemplate.starsRating.helpers({\n    getMutable: function(size) {\n        return this.isMutable || this.mutable;\n    }\n});\n\nTemplate._stars.helpers({\n    stars: function() {\n        return _.range(1, this.size + 1);\n    }\n});\n"]}