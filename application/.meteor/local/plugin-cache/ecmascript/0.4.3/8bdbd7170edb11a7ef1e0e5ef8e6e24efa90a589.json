{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var _templating = require('meteor/templating');\n\nvar _reactiveVar = require('meteor/reactive-var');\n\nrequire('./main.html');\n\n/*\nvar img_data = [\n  {\n    img_src:\"laptops.png\",\n    img_alt:\"some laptops\"\n  },\n  {\n    img_src:\"ipad.jpg\",\n    img_alt:\"some ipad\"\n  },\n  {\n    img_src:\"mobile.png\",\n    img_alt:\"some mobile\"\n  },\n];*/\n\n//Template.images.helpers({images: img_data});\n\n$(window).scroll(function () {\n  console.log(\"This is the scroll event\");\n});\n\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_AND_EMAIL\"\n});\n\n_templating.Template.body.helpers({\n  username: function () {\n    function username() {\n      if (Meteor.user()) {\n        //return Meteor.user().emails[0].address;  -- Returns the current user's email ID\n        return Meteor.user().username;\n      } else {\n        return \"Anonymous Internet User\";\n      }\n    }\n\n    return username;\n  }()\n});\n\n_templating.Template.images.helpers({\n  images: function () {\n    function images() {\n      if (Session.get(\"userFilter\")) {\n        return Img.find({ createdBy: Session.get(\"userFilter\") }, { sort: { createdOn: -1, rating: -1 } }); // Displaying the images created by a particular user\n      } else {\n          return Img.find({}, { sort: { createdOn: -1, rating: -1 } }); // Displaying all the images\n        }\n    }\n\n    return images;\n  }(),\n\n  filtering_images: function () {\n    function filtering_images() {\n      // Checking whether user has applied filter\n      if (Session.get(\"userFilter\")) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    return filtering_images;\n  }(),\n\n  getFilterUser: function () {\n    function getFilterUser() {\n      // Get the filtered username\n      if (Session.get(\"userFilter\")) {\n        var user = Meteor.users.findOne({ _id: Session.get(\"userFilter\") });\n        return user.username;\n      } else {\n        return false;\n      }\n    }\n\n    return getFilterUser;\n  }(),\n\n  getUser: function () {\n    function getUser(user_id) {\n      // Displaying the user name based on the userId\n      var user = Meteor.users.findOne({ _id: user_id });\n      console.log(\"check::;\" + user_id);\n      if (user) {\n        return user.username;\n      } else {\n        return \"anon\";\n      }\n    }\n\n    return getUser;\n  }()\n});\n\n_templating.Template.images.events({\n  'click .js-images': function () {\n    function clickJsImages(event) {\n      $(event.target).css(\"width\", \"50px\");\n    }\n\n    return clickJsImages;\n  }(),\n\n  'click .js-del-images': function () {\n    function clickJsDelImages(event) {\n      var image_id = this._id;\n      console.log(image_id);\n      // use jquery to hide the image component\n      // then remove it at the end of the animation\n      $(\"#\" + image_id).hide('slow', function () {\n        Img.remove({ \"_id\": image_id });\n      });\n    }\n\n    return clickJsDelImages;\n  }(),\n\n  'click .js-rate-image': function () {\n    function clickJsRateImage(event) {\n      var rating = $(event.currentTarget).data(\"userrating\");\n      console.log(\"You clicked  a star rate \" + rating);\n      var image_id = this.id;\n      console.log(\"Image id is \" + image_id);\n\n      Img.update({ _id: image_id }, { $set: { rating: rating } });\n    }\n\n    return clickJsRateImage;\n  }(),\n\n  'click .js-show-image-form': function () {\n    function clickJsShowImageForm(event) {\n      $(\"#image_add_form\").modal('show');\n    }\n\n    return clickJsShowImageForm;\n  }(),\n\n  'click .js-set-image-filter': function () {\n    function clickJsSetImageFilter(event) {\n      Session.set(\"userFilter\", this.createdBy);\n    }\n\n    return clickJsSetImageFilter;\n  }(),\n\n  'click .js-unset-image-filter': function () {\n    function clickJsUnsetImageFilter(event) {\n      Session.set(\"userFilter\", undefined);\n    }\n\n    return clickJsUnsetImageFilter;\n  }()\n\n});\n\n_templating.Template.image_add_form.events({\n  'submit .js-add-image': function () {\n    function submitJsAddImage(event) {\n      var img_src, img_alt;\n      img_src = event.target.img_src.value;\n      img_alt = event.target.img_alt.value;\n      console.log(\"src :\" + img_src + \" alt:\" + img_alt);\n      if (Meteor.user()) {\n        Img.insert({\n          img_src: img_src,\n          img_alt: img_alt,\n          createdOn: new Date(),\n          createdBy: Meteor.user()._id\n        });\n      }\n\n      $(\"#image_add_form\").modal('hide');\n\n      return false;\n    }\n\n    return submitJsAddImage;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport './main.html';\n\n\n/*\nvar img_data = [\n  {\n    img_src:\"laptops.png\",\n    img_alt:\"some laptops\"\n  },\n  {\n    img_src:\"ipad.jpg\",\n    img_alt:\"some ipad\"\n  },\n  {\n    img_src:\"mobile.png\",\n    img_alt:\"some mobile\"\n  },\n];*/\n\n//Template.images.helpers({images: img_data});\n\n\n$(window).scroll(function(){\n  console.log(\"This is the scroll event\");\n});\n\n\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_AND_EMAIL\"\n});\n\n\nTemplate.body.helpers({\n  username:function(){\n    if(Meteor.user()){\n      //return Meteor.user().emails[0].address;  -- Returns the current user's email ID\n      return Meteor.user().username;\n    }\n    else {\n      return \"Anonymous Internet User\";\n    }\n  }\n});\n\n\nTemplate.images.helpers({\n  images: function(){\n    if (Session.get(\"userFilter\")){\n      return Img.find({createdBy: Session.get(\"userFilter\")}, {sort:{createdOn: -1, rating: -1}});    // Displaying the images created by a particular user\n    }\n    else {\n      return Img.find({}, {sort:{createdOn: -1, rating: -1}});    // Displaying all the images\n    }\n  },\n  \n  filtering_images: function(){                                 // Checking whether user has applied filter\n    if (Session.get(\"userFilter\")){\n      return true;\n    }\n    else {\n      return false;\n    }\n  },\n  \n  getFilterUser: function(){                                  // Get the filtered username\n    if (Session.get(\"userFilter\")){\n      var user = Meteor.users.findOne(\n        {_id:Session.get(\"userFilter\")});\n       return user.username;\n    }\n    else {\n      return false;\n    }\n  },\n  \n  getUser:function(user_id){                                  // Displaying the user name based on the userId\n      var user = Meteor.users.findOne({_id:user_id});\n      console.log(\"check::;\"+user_id);\n      if (user){\n        return user.username;\n      }\n      else {\n        return \"anon\";\n      }\n    }\n});\n\n\nTemplate.images.events({\n  'click .js-images': function(event){\n    $(event.target).css(\"width\",\"50px\");\n  },\n  \n  'click .js-del-images': function(event){\n    var image_id = this._id;\n    console.log(image_id);\n    // use jquery to hide the image component\n    // then remove it at the end of the animation\n    $(\"#\"+image_id).hide('slow', function(){\n      Img.remove({\"_id\":image_id});\n    })\n  },\n  \n  'click .js-rate-image': function(event){\n    var rating = $(event.currentTarget).data(\"userrating\");\n    console.log(\"You clicked  a star rate \"+rating);\n    var image_id = this.id;\n    console.log(\"Image id is \"+image_id);\n    \n    Img.update({_id:image_id},\n                  {$set: {rating:rating}});\n  },\n  \n  'click .js-show-image-form': function(event){\n    $(\"#image_add_form\").modal('show');\n  },\n  \n  'click .js-set-image-filter': function(event){\n    Session.set(\"userFilter\", this.createdBy);\n  },\n  \n  'click .js-unset-image-filter': function(event){\n    Session.set(\"userFilter\", undefined);\n  }\n  \n});\n\n\nTemplate.image_add_form.events({\n  'submit .js-add-image': function(event){\n    var img_src, img_alt;\n    img_src = event.target.img_src.value;\n    img_alt = event.target.img_alt.value;\n    console.log(\"src :\"+img_src+\" alt:\"+img_alt);\n    if(Meteor.user()){\n        Img.insert({\n        img_src: img_src,\n        img_alt: img_alt,\n        createdOn: new Date(),\n        createdBy: Meteor.user()._id,\n      });\n    }\n    \n    $(\"#image_add_form\").modal('hide');\n    \n    return false;\n  }\n});\n"]},"hash":"8bdbd7170edb11a7ef1e0e5ef8e6e24efa90a589"}
